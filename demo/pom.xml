<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.globalegrow.scg</groupId>
	<artifactId>scg-parent</artifactId>
	<version>1.0.4.RELEASE</version>
	<packaging>pom</packaging>

	<name>scg-core</name>
	<description>scg-core</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.0.6.RELEASE</version>
	</parent>

	<properties>
		<scg-core.version>1.0.4.RELEASE</scg-core.version>

		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<poi-ooxml.version>3.15</poi-ooxml.version>
		<okhttp.version>3.4.2</okhttp.version>
		<commons-lang3.version>3.3.2</commons-lang3.version>
		<commons-io.version>2.4</commons-io.version>
		<kryo.version>4.0.0</kryo.version>
		<kryo-serializers.version>0.41</kryo-serializers.version>
		<fst.version>2.56</fst.version>
		<fastjson.version>1.2.83</fastjson.version>
		<protostuff.version>1.0.12</protostuff.version>
		<jpa.version>1.0</jpa.version>
		<spring-boot-starter-dubbo.version>1.0.9</spring-boot-starter-dubbo.version>
		<spring-boot-admin.version>2.0.4</spring-boot-admin.version>
		<spring-cloud.version>Finchley.SR2</spring-cloud.version>
		<sonar.host.url>http://sonar.hqygou.com</sonar.host.url>
		<sonar.login>d6fac3edaa2e58eb3a48cbdca1b0bd0c15d8b343</sonar.login>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

	</dependencies>
	<repositories>
		<repository>
			<id>globalegrow-maven</id>
			<url>http://10.40.6.48:8081/nexus/content/groups/public/</url>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>always</updatePolicy>
			</snapshots>
			<releases>
				<enabled>true</enabled>
			</releases>
		</repository>
	</repositories>

	<!-- 部署到私服 -->
	<distributionManagement>
		<repository>
			<id>releases</id>
			<name>globalegrow releases</name>
			<url>http://10.40.6.48:8081/nexus/content/repositories/releases/</url>
		</repository>
		<snapshotRepository>
			<id>snapshots</id>
			<name>globalegrow snapshots</name>
			<url>http://10.40.6.48:8081/nexus/content/repositories/snapshots/</url>
		</snapshotRepository>
	</distributionManagement>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>com.globalegrow.scg</groupId>
				<artifactId>scg-core</artifactId>
				<version>${scg-core.version}</version>
			</dependency>
			
			<dependency>
				<groupId>com.globalegrow.scg</groupId>
				<artifactId>scg-dao</artifactId>
				<version>${scg-core.version}</version>
			</dependency>
			
			<dependency>
				<groupId>com.globalegrow.scg</groupId>
				<artifactId>scg-idworker</artifactId>
				<version>${scg-core.version}</version>
			</dependency>
			
			<dependency>
				<groupId>com.globalegrow.scg</groupId>
				<artifactId>scg-redis</artifactId>
				<version>${scg-core.version}</version>
			</dependency>
			
			<dependency>
				<groupId>com.globalegrow.scg</groupId>
				<artifactId>scg-swagger</artifactId>
				<version>${scg-core.version}</version>
			</dependency>
			
			<dependency>
				<groupId>com.globalegrow.scg</groupId>
				<artifactId>scg-ejob</artifactId>
				<version>${scg-core.version}</version>
			</dependency>

			<dependency>
				<groupId>com.globalegrow.scg</groupId>
				<artifactId>scg-rabbitmq</artifactId>
				<version>${scg-core.version}</version>
			</dependency>

			<dependency>
				<groupId>com.globalegrow.scg</groupId>
				<artifactId>scg-async-core</artifactId>
				<version>${scg-core.version}</version>
			</dependency>
			
			<dependency>
				<groupId>com.globalegrow.scg</groupId>
				<artifactId>scg-async-rabbitmq</artifactId>
				<version>${scg-core.version}</version>
			</dependency>
			
			<dependency>
			    <groupId>tk.mybatis</groupId>
			    <artifactId>mapper</artifactId>
			    <version>3.4.6</version>
			</dependency>
			
			<dependency>
				<groupId>com.gitee.reger</groupId>
				<artifactId>spring-boot-starter-dubbo</artifactId>
				<version>${spring-boot-starter-dubbo.version}</version>
			</dependency>

			<dependency>
				<groupId>org.mybatis.generator</groupId>
				<artifactId>mybatis-generator-core</artifactId>
				<version>1.3.5</version>
			</dependency>
			
			<dependency>
				<groupId>javax.persistence</groupId>
				<artifactId>persistence-api</artifactId>
				<version>${jpa.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>${commons-lang3.version}</version>
			</dependency>

			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>${commons-io.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.poi</groupId>
				<artifactId>poi-ooxml</artifactId>
				<version>${poi-ooxml.version}</version>
			</dependency>
			<dependency>
				<groupId>com.squareup.okhttp3</groupId>
				<artifactId>okhttp</artifactId>
				<version>${okhttp.version}</version>
			</dependency>
			<!-- 序列化实现库 -->
			<dependency>
				<groupId>com.dyuproject.protostuff</groupId>
				<artifactId>protostuff-core</artifactId>
				<version>${protostuff.version}</version>
			</dependency>
			<dependency>
				<groupId>com.dyuproject.protostuff</groupId>
				<artifactId>protostuff-runtime</artifactId>
				<version>${protostuff.version}</version>
			</dependency>
			<dependency>
				<groupId>com.esotericsoftware</groupId>
				<artifactId>kryo</artifactId>
				<version>${kryo.version}</version>
			</dependency>
			<dependency>
				<groupId>de.javakaffee</groupId>
				<artifactId>kryo-serializers</artifactId>
				<version>${kryo-serializers.version}</version>
			</dependency>
			<dependency>
				<groupId>de.ruedigermoeller</groupId>
				<artifactId>fst</artifactId>
				<version>${fst.version}</version>
			</dependency>
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>fastjson</artifactId>
				<version>${fastjson.version}</version>
			</dependency>
			<!-- 序列化实现库 -->
			<dependency>
				<groupId>com.google.zxing</groupId>
				<artifactId>javase</artifactId>
				<version>3.3.1</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>de.codecentric</groupId>
				<artifactId>spring-boot-admin-dependencies</artifactId>
				<version>${spring-boot-admin.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<modules>
		<module>scg-core</module>
		<module>scg-dao</module>
		<module>scg-swagger</module>
		<module>scg-ejob</module>
		<module>scg-redis</module>
		<module>scg-idworker</module>
		<module>scg-rabbitmq</module>
		<module>scg-async</module>
	</modules>
	
	
	<build>
		<plugins>
			<plugin>
				<groupId>org.sonarsource.scanner.maven</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
				<version>3.4.0.905</version>
			</plugin>
		</plugins>
	</build>
</project>